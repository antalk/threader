package com.paragonict.webapp.threader.base;

import org.apache.tapestry5.Block;
import org.apache.tapestry5.ComponentResources;
import org.apache.tapestry5.EventContext;
import org.apache.tapestry5.annotations.OnEvent;
import org.apache.tapestry5.ioc.annotations.Inject;
import org.slf4j.Logger;

import com.paragonict.tapisser.growl.Message;
import com.paragonict.webapp.threader.services.IAccountService;

public abstract class BaseComponent {

	@Inject
	private ComponentResources resources;
	
	@Inject
	private IAccountService as;
	
	@Inject
	private Logger logger;
	
	public ComponentResources getResources() {
		return resources;
	}
	
	public IAccountService getAccountService() {
		return as;
	}
	
	public Logger getLogger() {
		return logger;
	}
	
	public void addGrowlerMessage(final Message msg) {
		// get the growler component from the index page!
		// but if not on BasicPage page,, this fails miserably
		final BasicPage page  = (BasicPage) getResources().getPage();//.getComponentResources().getComponentModel().getEmbeddedComponentModel("growl").
		page.addGrowlerMessage(msg);
	}
	
	public Block getAjaxLoader() {
		return resources.getPage().getComponentResources().getBlock("ajaxLoader");
	}
	
	public boolean getIsLoggedIn() {
		return as.isLoggedIn();
	}
	/**
	 * Generated by RequiresLoginFilter to handle ajax requests to secured components when
	 * the session is expired and the user is not logged in anymore 
	 */
	@OnEvent("sessionexpired")
	private Block handleSessionExpired(EventContext context) {
		resources.discardPersistentFieldChanges();
		return resources.getPage().getComponentResources().getBlock("sessionexpired");
	}
}

